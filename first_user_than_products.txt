mix archive.install hex igniter_new
mix igniter.new example_app \
    --with phx.new \
    --install ash,ash_phoenix,ash_postgres \
    --yes
cd example_app
mix ash.setup
cd assets && yarn add alpinejs && cd ..

#  assets/js/app.js

import Alpine from "alpinejs";
window.Alpine = Alpine;
Alpine.start();
[...]
let liveSocket = new LiveSocket("/live", Socket, {
  longPollFallbackMs: 2500,
  params: { _csrf_token: csrfToken },
  dom: {
    onBeforeElUpdated(from, to) {
      if (from._x_dataStack) {
        window.Alpine.clone(from, to);
      }
    },
  },
});

# Impliment TainwindCSS
# https://tailwindui.com/components/application-ui/application-shells/stacked

# zed AI command
# app.html.heex

# root.html.heex
  <html class="h-full bg-gray-100">
  <body class="h-full">

# Page controller stuff

remove `layout: false` and add `Hello World!`

# Alpine.js Stuff

# Modify the app.html.heex file with Alpine.js attributes

## Desktop

Setup the main variables. Search for the `<nav>` element and add `x-data="{ openDesktopMenu: false, openMobileMenu: false }"` to it:

    <nav class="bg-gray-800" x-data="{ openDesktopMenu: false, openMobileMenu: false }">

Toggle openDesktopMenu for the Desktop Avatar Menu. Add `x-on:click="openDesktopMenu = !openDesktopMenu"` into the <button> element:

    <button
      type="button"
      class="relative flex max-w-xs items-center rounded-full bg-gray-800 text-sm focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800"
      id="user-menu-button"
      aria-expanded="false"
      aria-haspopup="true"
      x-on:click="openDesktopMenu = !openDesktopMenu"
    >

Show/Hide the Desktop Avatar Menu. Search for the <div> with `role="menu"` and add `x-show="openDesktopMenu"
  x-transition` to it:

    <div
      class="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none"
      role="menu"
      aria-orientation="vertical"
      aria-labelledby="user-menu-button"
      tabindex="-1"
      x-show="openDesktopMenu"
      x-transition
    >

The x-show will make this dropdown menu visible only when openDesktopMenu is true, and x-transition will add a fade-in/fade-out effect.

## Mobile

Search for "Mobile menu button" and add `Mobile menu button` in the `<button>` element below that comment:

    <!-- Mobile menu button -->
    <button
      type="button"
      class="relative inline-flex items-center justify-center rounded-md bg-gray-800 p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800"
      aria-controls="mobile-menu"
      aria-expanded="false"
      x-on:click="openMobileMenu = !openMobileMenu"
    >

Search the `<div>` element with the `id="mobile-menu"` and add `x-show="openMobileMenu" x-transition` to it:

    <div class="md:hidden" id="mobile-menu" x-show="openMobileMenu" x-transition>
