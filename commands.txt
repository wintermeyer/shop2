
mix archive.install hex igniter_new
mix igniter.new shop2 \
    --with phx.new \
    --install ash,ash_phoenix,ash_postgres,ash_money

---
mix ash.gen.resource Shop2.Shop.Product \
  --uuid-v7-primary-key id \
  --attribute name:string:required:public \
  --extend postgres \
  --defaults create,read,update,destroy
---
mix ash.gen.resource Shop2.Shop.Product \
  --uuid-primary-key id \
  --attribute name:string:required:public \
  --attribute description:string:required:public \
  --attribute image:string:public \
  --attribute price:money:required:public \
  --attribute quantity_stored:integer:required:public \
  --relationship belongs_to:category:Shop2.Shop.Category:public:required \
  --extend postgres
  --defaults create,read,update,destroy

--

mix ash.codegen add_products_and_categories
mix ash.setup

--

mix igniter.install ash_authentication_phoenix \
  --auth-strategy password

--

mix ash.migrate

--

mix ash.gen.enum Shop2.Accounts.User.Types.Role admin,manager,employee \
  --short-name user_role

# hand edit user

mix ash.codegen add_fields_to_user

# role field using enum
attribute :role, :user_role do
    allow_nil? false
    default :user
end

--

mix ash.codegen add_fields_to_user
mix ash.migrate

--

mix ash.patch.extend Shop2.Shop.Product Ash.Policy.Authorizer
mix ash.patch.extend Shop2.Shop.Category Ash.Policy.Authorizer

# add to both
  policies do
    policy action_type([:create, :update, :destroy]) do
      authorize_if actor_attribute_equals(:role, :admin)
    end
  end

--

# in your liveviews

`socket.assigns.current_user` will be avaialable

you will pass it in as `actor: socket.assigns.current_user` whenever calling actions

--

Ash.read!(Shop2.Shop.Product)
